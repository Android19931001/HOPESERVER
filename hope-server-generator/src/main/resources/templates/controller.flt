package ${packageName}.${tabChFileName}.resource;


import contant.Contants;
import base.BaseNoResp;
import ${packageName}.${tabChFileName}.domain.${tableChName}Entity;
import ${packageName}.${tabChFileName}.service.impl.${tableChName}ServiceImpl;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.test.annotation.Timed;
import org.springframework.web.bind.annotation.*;
import utils.Result;


/**
 * @author ${author}
 */
@RestController
@RequestMapping("/webservice")
public class ${tableChName}Resource {

    private Logger logger = LoggerFactory.getLogger(${tableChName}Resource.class);

    @Autowired
    ${tableChName}ServiceImpl ${tabChFileName}Service;

    /**
     * 根据id查询（查）
     *
     * @param id
     * @return
     */
    @Timed(millis = Contants.TIME_PRIOD)
    @GetMapping("${tabChFileName}/select/{id}")
    public ResponseEntity<${tableChName}Entity> select${tableChName}ById(@PathVariable String id) {
        logger.info("查询的Id === {}", id);
        ${tableChName}Entity ${tabChFileName}Entity = ${tabChFileName}Service.getById(id);
        return ResponseEntity.ok().body(${tabChFileName}Entity);
    }

    /**
     * 删除操作（删）
     *
     * @param id
     * @return
     */
    @Timed(millis = Contants.TIME_PRIOD)
    @DeleteMapping("${tabChFileName}/remove/{id}")
    public BaseNoResp<Boolean> remove${tableChName}ById(@PathVariable String id) {
        logger.info("删除操作id === {}", id);
        return Result.noBody(${tabChFileName}Service.removeById(id));
    }

    /**
     * 插入数据（增）（改）
     *
     * @param ${tabChFileName}Entity
     * @return
     */
    @Timed(millis = Contants.TIME_PRIOD)
    @PostMapping("${tabChFileName}/saveOrUpdate")
    public ResponseEntity<${tableChName}Entity> save${tableChName}(@RequestBody ${tableChName}Entity ${tabChFileName}Entity) {
        logger.info("添加操作 === {}", ${tabChFileName}Entity);
        ${tabChFileName}Service.saveOrUpdate(${tabChFileName}Entity);
        return ResponseEntity.ok().body(${tabChFileName}Entity);
    }


}